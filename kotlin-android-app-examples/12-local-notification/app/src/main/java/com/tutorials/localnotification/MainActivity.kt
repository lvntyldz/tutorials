package com.tutorials.localnotification

import android.app.*
import android.content.Context
import android.content.Intent
import android.graphics.BitmapFactory
import android.graphics.Color
import android.os.Build
import android.os.Bundle
import androidx.appcompat.app.AppCompatActivity
import kotlinx.android.synthetic.main.activity_main.*

class MainActivity : AppCompatActivity() {

    lateinit var manager: NotificationManager
    lateinit var channel: NotificationChannel
    lateinit var notificationBuilder: Notification.Builder

    private val channelId: String = "com.tutorials.localnotification"
    private val description: String = "Notification Sample Description"
    private val notoficationId = 1001
    private val requestCode = 1002

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        manager = getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager

        notificationBtn.setOnClickListener {

            val intent = Intent(this, LauncherActivity::class.java)
            val pendingIntent = PendingIntent.getActivity(this, requestCode, intent, PendingIntent.FLAG_UPDATE_CURRENT)


            val notificationTitle = "some notification title"
            val notificationContent = "some notification text"

            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {//auto generated by idea
                channel = NotificationChannel(channelId, description, NotificationManager.IMPORTANCE_HIGH)
                channel.enableLights(true)
                channel.lightColor = Color.BLUE
                channel.enableVibration(true)

                manager.createNotificationChannel(channel)

                notificationBuilder = Notification.Builder(this, channelId)
                        .setContentTitle(notificationTitle)
                        .setContentText(notificationContent)
                        .setSmallIcon(R.drawable.notify)
                        .setLargeIcon(BitmapFactory.decodeResource(resources, R.drawable.notify))
                        .setContentIntent(pendingIntent)
            } else {
                notificationBuilder = Notification.Builder(this)
                        .setContentTitle(notificationTitle)
                        .setContentText(notificationContent)
                        .setSmallIcon(R.drawable.notify)
                        .setLargeIcon(BitmapFactory.decodeResource(resources, R.drawable.notify))
                        .setContentIntent(pendingIntent)
            }

            manager.notify(notoficationId, notificationBuilder.build())
        }
    }
}