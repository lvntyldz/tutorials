[{"/Users/leventyildiz/development/git/tutorials/react-global-state-examples/redux-router-example/src/index.js":"1","/Users/leventyildiz/development/git/tutorials/react-global-state-examples/redux-router-example/src/reducers/index.js":"2","/Users/leventyildiz/development/git/tutorials/react-global-state-examples/redux-router-example/src/actionTypes/index.js":"3","/Users/leventyildiz/development/git/tutorials/react-global-state-examples/redux-router-example/src/screens/Counter/index.js":"4","/Users/leventyildiz/development/git/tutorials/react-global-state-examples/redux-router-example/src/screens/Login/index.js":"5","/Users/leventyildiz/development/git/tutorials/react-global-state-examples/redux-router-example/src/screens/Home/index.js":"6"},{"size":2213,"mtime":1610083658797,"results":"7","hashOfConfig":"8"},{"size":995,"mtime":1610083603012,"results":"9","hashOfConfig":"8"},{"size":99,"mtime":1610044511608,"results":"10","hashOfConfig":"8"},{"size":671,"mtime":1610083617541,"results":"11","hashOfConfig":"8"},{"size":1620,"mtime":1610083603032,"results":"12","hashOfConfig":"8"},{"size":214,"mtime":1610083471387,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lx7g2a",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"/Users/leventyildiz/development/git/tutorials/react-global-state-examples/redux-router-example/src/index.js",[],"/Users/leventyildiz/development/git/tutorials/react-global-state-examples/redux-router-example/src/reducers/index.js",["29"],"import { actionTypes } from \"../actionTypes\"\n\nconst increaseCount = (state) => {\n  let newState = { ...state };\n  newState.count += 1;\n  return newState\n}\n\nconst decreaseCount = (state) => {\n  let newState = { ...state };\n  newState.count -= 1;\n  return newState\n}\n\nconst doLogout = (state) => {\n  let newState = { ...state };\n  newState.auth = null;\n  return newState\n}\n\nconst setAuthToState = (state, data) => {\n  let newState = { ...state };\n  newState.auth = data;\n  return newState\n}\n\nconst initialState = { count: 0, auth: null };\nexport default (state = initialState, action) => {\n\n  switch (action.type) {\n\n    case actionTypes.INCREMENT:\n      return increaseCount(state)\n\n    case actionTypes.DECREMENT:\n      return decreaseCount(state)\n\n    case actionTypes.LOGOUT:\n      return doLogout(state)\n\n    case actionTypes.AUTH_DATA:\n      return setAuthToState(state, action.data);\n\n    default:\n      return state\n\n  }\n}",["30","31"],"/Users/leventyildiz/development/git/tutorials/react-global-state-examples/redux-router-example/src/actionTypes/index.js",[],"/Users/leventyildiz/development/git/tutorials/react-global-state-examples/redux-router-example/src/screens/Counter/index.js",["32"],"/Users/leventyildiz/development/git/tutorials/react-global-state-examples/redux-router-example/src/screens/Login/index.js",["33"],"import React, { useState } from 'react';\nimport { Form, FormGroup, Button } from 'react-bootstrap';\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from 'prop-types'\n\nconst Login = props => {\n\n    const history = useHistory();\n    const [username, setUsername] = useState();\n    const [password, setPassword] = useState();\n\n    const handleUsernameChange = (e) => {\n        setUsername(e.target.value);\n    }\n\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value);\n    }\n\n    const handleLoginClick = () => {\n\n        if (username === password) {\n            props.setAuthData({ token: \"aa-bb-cc\" });\n            history.push(\"/home\");\n            return;\n        }\n\n        alert(\"Username and passoword are not the same!\");\n\n    }\n\n    return (\n        <div style={{ display: 'flex', justifyContent: 'center', marginTop: 200 }}>\n            <Form style={{ width: 400 }}>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>username</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"username\" onChange={handleUsernameChange} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={handlePasswordChange} />\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\" onClick={handleLoginClick} > Login  </Button>\n            </Form>\n        </div>\n    );\n\n}\n\nLogin.propTypes = {\n    mainState: PropTypes.object.isRequired,\n  }\n  \n\nexport default Login;","/Users/leventyildiz/development/git/tutorials/react-global-state-examples/redux-router-example/src/screens/Home/index.js",[],{"ruleId":"34","severity":1,"message":"35","line":28,"column":1,"nodeType":"36","endLine":48,"endColumn":2},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":5,"column":5,"nodeType":"43","messageId":"44","endLine":7,"endColumn":6},{"ruleId":"45","severity":1,"message":"46","line":2,"column":16,"nodeType":"47","messageId":"48","endLine":2,"endColumn":25},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'FormGroup' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]